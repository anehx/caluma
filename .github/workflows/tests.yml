name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 0"

concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    env:
      ENV: dev

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - uses: actions/cache@v3.0.11
        with:
          path: .venv
          key: poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-

      - name: Set UID
        run: echo "UID=$(id --user)" > .env

      - name: Install dependencies
        run: |
          pip install -U poetry
          poetry config virtualenvs.in-project true
          poetry install

      - name: Run gitlint
        run: poetry run gitlint --contrib contrib-title-conventional-commits

      - name: Run black
        run: poetry run black --check .

      - name: Run flake8
        run: poetry run flake8 --exclude .venv

      - name: Run migration check
        run: poetry run python manage.py makemigrations --check --dry-run --no-input

      - name: Run reuse
        run: poetry run reuse lint

  docker-tests:
    name: Docker tests
    needs: [lint]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build the project
        run: |
          echo "UID=$(id --user)" > .env
          docker-compose up -d --build

      - name: Run tests
        run: docker-compose exec -T caluma poetry run pytest --no-cov-on-fail --cov --create-db -vv

  package-tests:
    name: Package tests
    needs: [lint]
    runs-on: ubuntu-latest

    env:
      ENV: dev

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: caluma
          POSTGRES_PASSWORD: caluma
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - uses: actions/cache@v3.0.11
        with:
          path: .venv
          key: poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-

      - name: Set UID
        run: echo "UID=$(id --user)" > .env

      - name: Install dependencies
        run: |
          pip install -U poetry
          poetry config virtualenvs.in-project true
          poetry install

      - name: Build and install package
        run: |
          poetry build
          pip install dist/caluma-*.whl

      - name: Run tests
        run: poetry run pytest --no-cov-on-fail --cov --create-db -vv

  compatibility-tests-postgres-10:
    name: "Compatibility tests"
    uses: ./.github/workflows/compatibility-tests.yml
    needs: [lint]
    with:
      postgres: "10"

  compatibility-tests-postgres-11:
    name: "Compatibility tests"
    uses: ./.github/workflows/compatibility-tests.yml
    needs: [lint]
    with:
      postgres: "11"

  compatibility-tests-postgres-12:
    name: "Compatibility tests"
    uses: ./.github/workflows/compatibility-tests.yml
    needs: [lint]
    with:
      postgres: "12"

  compatibility-tests-postgres-13:
    name: "Compatibility tests"
    uses: ./.github/workflows/compatibility-tests.yml
    needs: [lint]
    with:
      postgres: "13"

  compatibility-tests-postgres-14:
    name: "Compatibility tests"
    uses: ./.github/workflows/compatibility-tests.yml
    needs: [lint]
    with:
      postgres: "14"
