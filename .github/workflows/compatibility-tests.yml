on:
  workflow_call:
    inputs:
      postgres:
        required: true
        type: string

jobs:
  compatibility-tests:
    name: Postgres ${{ inputs.postgres }}, Python ${{ matrix.python }}
    runs-on: ubuntu-latest

    env:
      ENV: dev

    strategy:
      fail-fast: false
      matrix:
        python: ["3.8", "3.9", "3.10"]

    services:
      postgres:
        image: postgres:${{ inputs.postgres }}-alpine
        env:
          POSTGRES_USER: caluma
          POSTGRES_PASSWORD: caluma
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python}}

      - uses: actions/cache@v3
        with:
          path: .venv
          key: poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-

      - name: Set UID
        run: echo "UID=$(id --user)" > .env

      - name: Install dependencies
        run: |
          pip install -U poetry
          poetry config virtualenvs.in-project true
          poetry install

      - name: Run tests
        run: poetry run pytest --no-cov-on-fail --cov --create-db -vv
